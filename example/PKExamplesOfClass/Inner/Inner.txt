Java Inner Classes (Nested Classes)

    Java inner class or nested class is a class that is declared inside the class or interface.

class Java_Outer_class{
    //code
    class Java_Inner_class{
        //code
    }
}

Advantage of Java inner classes

    1- Nested classes represent a particular type of relationship that is it can access all
        the members (data members and methods) of the outer class, including private.
    2- Nested classes are used to develop more readable and maintainable code because
        it logically group classes and interfaces in one place only.
    3- Code Optimization: It requires less code to write.

Need of Java Inner class

    Sometimes users need to program a class in such a way so that no other class can access it.
        Therefore, it would be better if you include it within other classes.

    If all the class objects are a part of the outer object then
        it is easier to nest that class inside the outer class.
        That way all the outer class can access all the objects of the inner class.

Types of Nested classes

    There are two types of nested classes non-static and static nested classes.
        The non-static nested classes are also known as inner classes.

    Non-static nested class (inner class)

        • Member inner class : An object or instance of a member's inner class always exists within
            an object of its outer class. The new operator is used to create the object of
            member inner class with slightly different syntax.
            The Java compiler creates a class file named Outer$Inner in this case.
            The Member inner class has the reference of Outer class that is why it can access all
            the data members of Outer class including private.
        • Anonymous inner class : Java anonymous inner class is an inner class without a name and
            for which only a single object is created.
        • Local inner class : : A class i.e., created inside a method, is called local inner class in java.
            Local Inner Classes are the inner classes that are defined inside a block. Generally,
            this block is a method body. Sometimes this block can be a for loop, or an if clause.
            Local Inner classes are not a member of any enclosing classes. They belong to the block
            they are defined within, due to which local inner classes cannot have any access modifiers
            associated with them. However, they can be marked as final or abstract.
            These classes have access to the fields of the class enclosing it.
            Not & Rules: Local variables can't be private, public, or protected.
            1) Local inner class cannot be invoked from outside the method.
            2) Local inner class cannot access non-final local variable till JDK 1.7.
                Since JDK 1.8, it is possible to access the non-final local variable in
                the local inner class.

    Static nested class

        • Member inner class
        • Anonymous inner class
        • Local inner class
        • Static Nested Class : A static class is a class that is created inside a class, is called a
            static nested class in Java. It cannot access non-static data members and methods.
            It can be accessed by outer class name.
                                • It can access static data members of the outer class, including private.
                                • The static nested class cannot access non-static (instance) data members
            If you have the static member inside the static nested class, you don't need to create
            an instance of the static nested class.
        • Nested Interface :
            • nested interface which is declared within the interface
            • nested interface which is declared within the class
            • nested class which is declared within the interface